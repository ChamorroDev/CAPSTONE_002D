# Generated by Django 5.2.5 on 2025-08-21 18:32

import api.models
import api.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='JuntaVecinos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('direccion', models.TextField()),
                ('comuna', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('activa', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('nombre', models.CharField(max_length=30, verbose_name='nombre')),
                ('apellido', models.CharField(max_length=30, verbose_name='apellido')),
                ('rut', models.CharField(max_length=12, unique=True, verbose_name='RUT')),
                ('telefono', models.CharField(max_length=15, verbose_name='teléfono')),
                ('direccion', models.TextField(verbose_name='dirección')),
                ('fecha_nacimiento', models.DateField(verbose_name='fecha de nacimiento')),
                ('rol', models.CharField(choices=[('vecino', 'Vecino'), ('directivo', 'Directivo'), ('administrador', 'Administrador')], default='vecino', max_length=20)),
                ('puede_gestionar_vecinos', models.BooleanField(default=False)),
                ('puede_gestionar_certificados', models.BooleanField(default=False)),
                ('puede_gestionar_proyectos', models.BooleanField(default=False)),
                ('puede_gestionar_noticias', models.BooleanField(default=False)),
                ('puede_gestionar_calendario', models.BooleanField(default=False)),
                ('puede_gestionar_actividades', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('junta_vecinos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.juntavecinos')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha', models.DateTimeField()),
                ('cupo_maximo', models.IntegerField(default=0)),
                ('creada_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('junta_vecinos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.juntavecinos')),
            ],
        ),
        migrations.CreateModel(
            name='Noticia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('contenido', models.TextField()),
                ('fecha_publicacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('es_publica', models.BooleanField(default=True)),
                ('imagen_principal', models.ImageField(blank=True, help_text='Imagen principal de la noticia', null=True, upload_to='noticias/principal/')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('junta_vecinos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.juntavecinos')),
            ],
        ),
        migrations.CreateModel(
            name='NoticiaImagen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(upload_to=api.models.noticia_image_path, validators=[api.validators.validate_image_size, api.validators.validate_image_extension])),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('orden', models.PositiveIntegerField(default=0)),
                ('noticia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='api.noticia')),
            ],
            options={
                'ordering': ['orden', 'fecha_subida'],
            },
        ),
        migrations.CreateModel(
            name='ProyectoVecinal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_revision', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('revision', 'En revisión'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado'), ('completado', 'Completado')], default='pendiente', max_length=20)),
                ('junta_vecinos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.juntavecinos')),
                ('proponente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('revisado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proyectos_revisados', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SolicitudCertificado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=100)),
                ('motivo', models.TextField()),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True)),
                ('fecha_resolucion', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado')], default='pendiente', max_length=20)),
                ('resuelto_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='certificados_resueltos', to=settings.AUTH_USER_MODEL)),
                ('vecino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InscripcionActividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inscripcion', models.DateTimeField(auto_now_add=True)),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.actividad')),
                ('vecino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('actividad', 'vecino')},
            },
        ),
    ]
